{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","currentlyFocusedInput","setCurrentlyFocusedInput","buttonHandler","e","currFoc","val","value","target","focus","className","type","autoFocus","placeholder","onFocus","onClick","id","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNA8KeA,EAzKH,WAAM,MAEyCC,mBAAS,MAFlD,mBAEVC,EAFU,KAEaC,EAFb,KAIXC,EAAgB,SAACC,GACtBF,GAAyB,SAACG,GACzB,IAAIC,EAAMD,EAAQE,MAAQH,EAAEI,OAAOD,MAEnC,OADAF,EAAQE,MAAQD,EACTD,KAERJ,EAAsBQ,SAcvB,OACC,sBAAKC,UAAU,MAAf,UACC,sBAAKA,UAAU,aAAf,UACC,uCACA,uBACCC,KAAK,OAAOC,WAAS,EACrBC,YAAY,iBACZC,QAAS,SAACV,GAAD,OAAOF,EAAyBE,EAAEI,WAE5C,uBACCG,KAAK,WACLE,YAAY,iBACZC,QAAS,SAACV,GAAD,OAAOF,EAAyBE,EAAEI,cAI7C,sBAAKE,UAAU,qBAAf,UACC,sBAAKA,UAAU,UAAf,UACC,wBAAQH,MAAM,IAAIQ,QAASZ,EAA3B,eAGA,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAES,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGT,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGQ,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGA,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGA,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGH,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGL,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGK,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,kBAIN,sBAAKO,UAAU,UAAf,UACI,wBAAQH,MAAM,IAAIQ,QAASZ,EAA3B,eAGE,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGL,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGK,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGA,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGA,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGA,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGL,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGK,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGL,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,kBAID,sBAAKO,UAAU,UAAf,UACA,wBAAQH,MAAM,IAAIQ,QAASZ,EAA3B,eAGC,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGA,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGA,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGK,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGL,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGA,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGA,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGA,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,kBAID,sBAAKO,UAAU,UAAf,UACC,2CACA,wBAAQH,MAAM,IAAIQ,QAASZ,EAA3B,eAGQ,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGA,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGA,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGR,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGQ,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGR,wBAAQI,MAAM,IAAIQ,QAASZ,EAA3B,eAGA,wBAAQI,MAAM,YAAYS,GAAI,cAAcC,KAAK,YAAaP,UAAU,YAAxE,0BAED,qBACAA,UAAU,UADV,SAEC,wBAAQH,MAAM,IAAIQ,QAASZ,EAAgBO,UAAU,sBCzJ3CQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.45c4e44d.chunk.js","sourcesContent":["\nimport { useState } from 'react';\nimport './styles/keyboard.css';\n\n\nconst App = () => {\n\t// create a state to hold the currently active/focused input element\n\tconst [currentlyFocusedInput, setCurrentlyFocusedInput] = useState(null);\n\n\tconst buttonHandler = (e) => {\n\t\tsetCurrentlyFocusedInput((currFoc) => {\n\t\t\tlet val = currFoc.value + e.target.value;\n\t\t\tcurrFoc.value = val;\n\t\t\treturn currFoc;\n\t\t});\n\t\tcurrentlyFocusedInput.focus();\n\t};\n\n\n\t\n\tconst backHandler = (e) => {\n\tvar input = document.getElementById('backHandler');\n\tinput.onkeydown = function() {\n\t\tvar key = e.keyCode || e.charCode;\n\t\tif( key === 8 ){\n\t\t}\n\t};\n}\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<div className='login-form'>\n\t\t\t\t<h2>Login</h2>\n\t\t\t\t<input\n\t\t\t\t\ttype='text' autoFocus\n\t\t\t\t\tplaceholder='enter username'\n\t\t\t\t\tonFocus={(e) => setCurrentlyFocusedInput(e.target)}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype='password'\n\t\t\t\t\tplaceholder='enter password'\n\t\t\t\t\tonFocus={(e) => setCurrentlyFocusedInput(e.target)}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className='keyboard-container'>\n\t\t\t\t<div className='key-row'>\n\t\t\t\t\t<button value='1' onClick={buttonHandler}>\n\t\t\t\t\t\t1\n\t\t\t\t\t</button>\n\t\t\t\t\t<button value='2' onClick={buttonHandler}>\n\t\t\t\t\t\t2\n\t\t\t\t\t</button><button value='3' onClick={buttonHandler}>\n\t\t\t\t\t\t3\n\t\t\t\t\t</button>\n\t\t\t\t\t<button value='4' onClick={buttonHandler}>\n\t\t\t\t\t\t4\n\t\t\t\t\t</button>\n          \t\t\t<button value='5' onClick={buttonHandler}>\n\t\t\t\t\t\t5\n\t\t\t\t\t</button>\n          \t\t\t<button value='6' onClick={buttonHandler}>\n\t\t\t\t\t\t6\n\t\t\t\t\t</button>\n          \t\t\t<button value='7' onClick={buttonHandler}>\n\t\t\t\t\t\t7\n\t\t\t\t\t</button>\n          <button value='8' onClick={buttonHandler}>\n\t\t\t\t\t\t8\n\t\t\t\t\t</button>\n\t\t\t\t\t<button value='9' onClick={buttonHandler}>\n\t\t\t\t\t\t9\n\t\t\t\t\t</button>\n          <button value='0' onClick={buttonHandler}>\n\t\t\t\t\t\t0\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className='key-row'>\n        <button value='Q' onClick={buttonHandler}>\n\t\t\t\t\t\tQ\n\t\t\t\t\t</button>\n          <button value='W' onClick={buttonHandler}>\n\t\t\t\t\t\tW\n\t\t\t\t\t</button>\n\t\t\t\t\t<button value='E' onClick={buttonHandler}>\n\t\t\t\t\t\tE\n\t\t\t\t\t</button>\n          <button value='R' onClick={buttonHandler}>\n\t\t\t\t\t\tR\n\t\t\t\t\t</button>\n          <button value='T' onClick={buttonHandler}>\n\t\t\t\t\t\tT\n\t\t\t\t\t</button>\n          <button value='Y' onClick={buttonHandler}>\n\t\t\t\t\t\tY\n\t\t\t\t\t</button>\n          <button value='U' onClick={buttonHandler}>\n\t\t\t\t\t\tU\n\t\t\t\t\t</button>\n\t\t\t\t\t<button value='I' onClick={buttonHandler}>\n\t\t\t\t\t\tI\n\t\t\t\t\t</button>\n          <button value='O' onClick={buttonHandler}>\n\t\t\t\t\t\tO\n\t\t\t\t\t</button>\n\t\t\t\t\t<button value='P' onClick={buttonHandler}>\n\t\t\t\t\t\tP\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className='key-row'>\n\t\t\t\t<button value='A' onClick={buttonHandler}>\n\t\t\t\t\t\tA\n\t\t\t\t\t</button>\n\t\t\t\t\t<button value='S' onClick={buttonHandler}>\n\t\t\t\t\t\tS\n\t\t\t\t\t</button>\n\t\t\t\t\t<button value='D' onClick={buttonHandler}>\n\t\t\t\t\t\tD\n\t\t\t\t\t</button>\n\t\t\t\t\t<button value='F' onClick={buttonHandler}>\n\t\t\t\t\t\tF\n\t\t\t\t\t</button>\n          <button value='G' onClick={buttonHandler}>\n\t\t\t\t\t\tG\n\t\t\t\t\t</button>\n\t\t\t\t\t<button value='H' onClick={buttonHandler}>\n\t\t\t\t\t\tH\n\t\t\t\t\t</button>\n\t\t\t\t\t<button value='J' onClick={buttonHandler}>\n\t\t\t\t\t\tJ\n\t\t\t\t\t</button>\n\t\t\t\t\t<button value='K' onClick={buttonHandler}>\n\t\t\t\t\t\tK\n\t\t\t\t\t</button>\n\t\t\t\t\t<button value='L' onClick={buttonHandler}>\n\t\t\t\t\t\tL\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className='key-row'>\n\t\t\t\t\t<button>Shift</button>\n\t\t\t\t\t<button value='Z' onClick={buttonHandler}>\n\t\t\t\t\t\tZ\n\t\t\t\t\t</button>\n          \t\t\t<button value='X' onClick={buttonHandler}>\n\t\t\t\t\t\tX\n\t\t\t\t\t</button>\n          \t\t\t<button value='C' onClick={buttonHandler}>\n\t\t\t\t\t\tC\n\t\t\t\t\t</button>\n         \t\t\t <button value='V' onClick={buttonHandler}>\n\t\t\t\t\t\tV\n\t\t\t\t\t</button>\n\t\t\t\t\t<button value='B' onClick={buttonHandler}>\n\t\t\t\t\t\tB\n\t\t\t\t\t</button>\n          \t\t\t<button value='N' onClick={buttonHandler}>\n\t\t\t\t\t\tN\n\t\t\t\t\t</button>\n\t\t\t\t\t<button value='M' onClick={buttonHandler}>\n\t\t\t\t\t\tM\n\t\t\t\t\t</button>\n\t\t\t\t\t<button value='Backspace' id =\"backHandler\" name='backspace'  className='btn-large'>Backspace</button>\n\t\t\t\t</div>\n\t\t\t\t<div \n\t\t\t\tclassName='key-row'>\n\t\t\t\t\t<button value=' ' onClick={buttonHandler}  className='btn-full'></button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n\t\n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}